name: Release application

on:
  push:

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: dwk-cluster
  GKE_ZONE: europe-north1-b
  IMAGE_APP: todo-app
  SERVICE_APP: todo-app
  IMAGE_BACKEND: todo-backend
  SERVICE_BACKEND: todo-backend
  BRANCH: ${{ github.ref_name }}

jobs:
  build-publish-deploy:
    environment: part3
    name: Build, Publish and Deploy
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./todo

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GKE_SA_KEY }}'

      - name: 'Set up Cloud SDK'
        uses: google-github-actions/setup-gcloud@v2

      - name: 'Use gcloud CLI'
        run: gcloud info
      - run: gcloud --quiet auth configure-docker
      - name: 'Get GKE credentials'
        uses: 'google-github-actions/get-gke-credentials@v2'
        with:
          cluster_name: '${{ env.GKE_CLUSTER }}'
          project_id: '${{ env.PROJECT_ID }}'
          location: '${{ env.GKE_ZONE }}'
      - name: Build app
        run: docker build --tag "gcr.io/$PROJECT_ID/$IMAGE_APP:$BRANCH-$GITHUB_SHA" ./todo-app
      - name: Publish app
        run: docker push "gcr.io/$PROJECT_ID/$IMAGE_APP:$BRANCH-$GITHUB_SHA"

      - name: Build backend
        run: docker build --tag "gcr.io/$PROJECT_ID/$IMAGE_BACKEND:$BRANCH-$GITHUB_SHA" ./todo-backend
      - name: Publish backend
        run: docker push "gcr.io/$PROJECT_ID/$IMAGE_BACKEND:$BRANCH-$GITHUB_SHA"

      - name: Set up Kustomize
        uses: imranismail/setup-kustomize@v2

      - name: Deploy app and backend
        run: |-
          kustomize edit set image TODOAPP/IMAGE=gcr.io/$PROJECT_ID/$IMAGE_APP:$BRANCH-$GITHUB_SHA
          kustomize edit set image TODOBACKEND/IMAGE=gcr.io/$PROJECT_ID/$IMAGE_BACKEND:$BRANCH-$GITHUB_SHA
          kustomize build . | kubectl apply -f -
          kubectl rollout status deployment $SERVICE_BACKEND
          kubectl rollout status deployment $SERVICE_APP
          kubectl get services -o wide