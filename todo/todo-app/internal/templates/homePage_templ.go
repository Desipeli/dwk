// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.771
package templates

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func HomePage() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<!doctype html><html lang=\"en\"><head><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><meta name=\"htmx-config\" content=\"{&#34;selfRequestsOnly&#34;: false}\"><title>Todo App</title></head><body style=\"margin: auto; display: block; width: 400px;\"><img src=\"/public/image.jpg\" alt=\"A random image\" width=\"400px\"><form id=\"todo-form\"><input type=\"text\" name=\"todo\" id=\"todo\" maxlength=\"140\"> <input type=\"submit\" value=\"Create TODO\"></form><br><p><b>Todos</b></p><ul id=\"todo-list\"></ul><script>\n\t\t\t\tconst backendURL = `${window.location.origin}/todos`\n\n\t\t\t\tconst form = document.getElementById(\"todo-form\")\n\t\t\t\tconst todoList = document.getElementById(\"todo-list\")\n\n\t\t\t\tasync function sendTodo() {\n\t\t\t\t\tconst todo = document.getElementById(\"todo\").value.trim()\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst response = await fetch(backendURL, {\n\t\t\t\t\t\t\tmethod: \"POST\",\n\t\t\t\t\t\t\tbody: JSON.stringify({todo: todo})\n\t\t\t\t\t\t})\n\t\t\t\t\t\tawait response.json().then(todo => {\n\t\t\t\t\t\t\tcreateTodoElement(todo)\n\t\t\t\t\t\t\tclearTodoInput()\n\t\t\t\t\t\t})\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tconsole.error(e)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tform.addEventListener(\"submit\", (event) => {\n\t\t\t\t\tevent.preventDefault()\n\t\t\t\t\tsendTodo()\n\t\t\t\t})\n\n\n\t\t\t\tfunction clearTodoInput() {\n\t\t\t\t\ttodoInput = document.getElementById(\"todo\")\n\t\t\t\t\ttodoInput.value = \"\"\n\t\t\t\t}\n\n\t\t\t\tasync function todoDone(id) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst response = await fetch(`${backendURL}/${id}`, {\n\t\t\t\t\t\t\tmethod: \"PUT\"\n\t\t\t\t\t\t})\n\t\t\t\t\t\tif (await response.status == 200) {\n\t\t\t\t\t\t\tdocument.getElementById(`todo-${id}`).remove()\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tconsole.error(e)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfunction createTodoElement(todo) {\n\t\t\t\t\tconst li = document.createElement(\"li\")\n\t\t\t\t\tli.innerText=todo[\"Text\"]\n\t\t\t\t\tli.id = `todo-${todo[\"Id\"]}`\n\t\t\t\t\tli.setAttribute(\"name\", todo[\"Id\"])\n\t\t\t\t\tif (!todo[\"Done\"]) {\n\t\t\t\t\t\tconst doneButton = document.createElement(\"button\")\n\t\t\t\t\t\tdoneButton.innerText = \"Done\"\n\t\t\t\t\t\tdoneButton.addEventListener(\"click\", (event) => {\n\t\t\t\t\t\t\ttodoDone(todo[\"Id\"])\n\t\t\t\t\t\t})\n\t\t\t\t\t\tli.appendChild(doneButton)\n\t\t\t\t\t}\n\t\t\t\t\ttodoList.appendChild(li)\n\t\t\t\t}\n\n\t\t\t\tasync function fetchTodos() {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst response = await fetch(backendURL, {\n\t\t\t\t\t\t\tmethod: \"GET\",\n\t\t\t\t\t\t})\n\t\t\t\t\t\tconst todos = await response.json()\n\t\t\t\t\t\tif (todos && todos.length > 0) {\n\t\t\t\t\t\t\tfor (let todo of todos) {\n\t\t\t\t\t\t\t\tcreateTodoElement(todo)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tconsole.error(e)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tdocument.addEventListener(\"DOMContentLoaded\", (event) => {\n\t\t\t\t\tfetchTodos()\n\t\t\t\t})\n\n\t\t\t</script></body></html>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}

var _ = templruntime.GeneratedTemplate
