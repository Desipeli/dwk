package templates


templ HomePage() {
	<!DOCTYPE html>
	<html lang="en">
		<head>
			<meta charset="UTF-8" />
			<meta name="viewport" content="width=device-width, initial-scale=1.0" />
			<meta name="htmx-config" content='{"selfRequestsOnly": false}' />
			<title>Todo App</title>
		</head>
		<body style="margin: auto; display: block; width: 400px;">
			<img src="/public/image.jpg" alt="A random image" width="400px"/>
			<form 
				id="todo-form"
				>
				<input type="text" name="todo" id="todo" maxlength="140"/>
				<input type="submit" value="Create TODO"/>
			</form>
			<br>
			<p><b>Todos</b></p>
			<ul  id="todo-list"></ul>

			<script>
				const backendURL = `${window.location.origin}/todos`

				const form = document.getElementById("todo-form")
				const todoList = document.getElementById("todo-list")

				async function sendTodo() {
					const todo = document.getElementById("todo").value.trim()

					try {
						const response = await fetch(backendURL, {
							method: "POST",
							body: JSON.stringify({todo: todo})
						})
						await response.json().then(todo => {
							createTodoElement(todo)
							clearTodoInput()
						})
					} catch (e) {
						console.error(e)
					}
				}

				form.addEventListener("submit", (event) => {
					event.preventDefault()
					sendTodo()
				})


				function clearTodoInput() {
					todoInput = document.getElementById("todo")
					todoInput.value = ""
				}

				async function todoDone(id) {
					try {
						const response = await fetch(`${backendURL}/${id}`, {
							method: "PUT"
						})
						if (await response.status == 200) {
							document.getElementById(`todo-${id}`).remove()
						}
					} catch (e) {
						console.error(e)
					}
				}

				function createTodoElement(todo) {
					const li = document.createElement("li")
					li.innerText=todo["Text"]
					li.id = `todo-${todo["Id"]}`
					li.setAttribute("name", todo["Id"])
					if (!todo["Done"]) {
						const doneButton = document.createElement("button")
						doneButton.innerText = "Done"
						doneButton.addEventListener("click", (event) => {
							todoDone(todo["Id"])
						})
						li.appendChild(doneButton)
					}
					todoList.appendChild(li)
				}

				async function fetchTodos() {
					try {
						const response = await fetch(backendURL, {
							method: "GET",
						})
						const todos = await response.json()
						if (todos && todos.length > 0) {
							for (let todo of todos) {
								createTodoElement(todo)
							}
						}
					} catch (e) {
						console.error(e)
					}
				}

				document.addEventListener("DOMContentLoaded", (event) => {
					fetchTodos()
				})

			</script>
		</body>
	</html>
}